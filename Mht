<div fxFill>
    <mat-toolbar style="height:22px;">
        <mat-icon class="pointer" (click)="NavigateBack()">arrow_back</mat-icon>
        <span><font class="text-secondary">{{ProductData.ProductName}}</font> / {{MachineData.DockerID}}{{DeployedVersionTag != "" ? (":" + DeployedVersionTag) : ""}}</span>
        <span class="V3-Badge"><mat-icon class="pointer" style="width: 14px!important;height: 12px!important;font-size: 15px;">flash_on</mat-icon>V3</span>
    </mat-toolbar>
    <mat-tab-group *ngIf="IsLoadComplete==true" [dynamicHeight]="false" [selectedIndex]="selectedIndex" (selectedIndexChange)="updateSelectedIndex($event)" #machineTabGroup>
        <mat-tab fxFlex label="Overview">
            <div *ngIf="MachineData.Label != null && labelNeedsUpdate == false">
                <table mat-table [dataSource]="machineLabel" class="mat-elevation-z8" style="width:100%;">
                    <ng-container matColumnDef="title">
                        <td mat-cell style="width:175px;" *matCellDef="let element" class="text-secondary"> {{element.title}} </td>
                    </ng-container>
                    <ng-container matColumnDef="value">
                        <td mat-cell *matCellDef="let element" style="justify-content:flex-start;">
                            <span *ngIf="element.title!='link-to-manual' && element.title!='link-to-sample'">{{element.value}} </span>
                            <a *ngIf="element.title=='link-to-manual' || element.title=='link-to-sample'" href="{{element.value}}">{{element.value}}</a>
                        </td>
                    </ng-container>
                    <tr mat-row style="height:32px;" *matRowDef="let row; columns: displayedColumns;"></tr>
                </table>
                <br />
                <div fxLayout="row" fxLayoutAlign="space-between stretch" fxLayoutGap="10px">
                    <mat-expansion-panel [expanded]="true" fxFlex>
                        <mat-expansion-panel-header style="height:30px;">
                            <mat-panel-title>
                                Input
                            </mat-panel-title>
                        </mat-expansion-panel-header>
                        <mat-list>
                            <mat-list-item *ngFor="let prop of MachineData.Label['schema-in'] | keyvalue">{{prop.key}} &nbsp;&nbsp;<span class="text-secondary">({{getPropertyType(prop.value)}})</span></mat-list-item>
                        </mat-list>
                    </mat-expansion-panel>
                    <mat-expansion-panel [expanded]="true" fxFlex>
                        <mat-expansion-panel-header style="height:30px;">
                            <mat-panel-title>
                                Output
                            </mat-panel-title>
                        </mat-expansion-panel-header>
                        <mat-list>
                            <mat-list-item *ngFor="let prop of MachineData.Label['schema-out'] | keyvalue">{{prop.key}} &nbsp;&nbsp;<span class="text-secondary">({{getPropertyType(prop.value)}})</span></mat-list-item>
                        </mat-list>
                    </mat-expansion-panel>
                </div>
            </div>
            <div *ngIf="machineLoaded && MachineData.Label == null" style="min-height:650px;background-color:#424242;" class="text-light p-2 text-center">
                <br /><br />
                <h2>Machine has no label information from the docker image</h2>
                <br />
                <h2>Please upload an image with the proper label metadata</h2>
                <br />
                <button mat-raised-button color="primary" (click)="updateSelectedIndex(2)">Go to Administration Section</button>
            </div>
            <div *ngIf="machineLoaded && labelNeedsUpdate" style="min-height:650px;background-color:#424242;" class="text-light p-2 text-center">
                <br /><br />
                <h2>Machine information on the Portal is out of date</h2>
                <br />
                <h2>Retrieving information from docker container now</h2>
            </div>
        </mat-tab>



        <mat-tab *ngIf="Mode =='dev' && IsLabelCreatorEnabled==true" label="Label Creator">
            <mat-accordion *ngIf="MachineData.LabelJSON != '' && MachineData.Label != null">
                <mat-expansion-panel [expanded]="Step==1" (opened)="Step=1;">
                    <mat-expansion-panel-header>
                        <mat-panel-title>
                            Docker Properties
                        </mat-panel-title>
                    </mat-expansion-panel-header>
                    <span style="color:red">{{schemStaticInfoErrorMsg}}</span>
                    <!-- <div id="dvStaticFieldInfo" style="width:100%;">
                        <table style="margin-top:30px" class="example-full-width" cellspacing="10">
                            <tr>
                                <td>
                                    <label>NVidia : </label>
                                </td>
                                <td>
                                    <input [checked]="MachineData.Label.nvidia == true  ? true : null" (change)="MachineData.Label.nvidia = !MachineData.Label.nvidia" type="checkbox" class="CheckBox" />
                                </td>
                            </tr>
                            <tr>
                                <td>
                                    <label>Time Out&nbsp;(in Mins) : </label>
                                </td>
                                <td>
                                    <mat-form-field class="example-full-width">
                                        <input matInput type="number" min="1" max="60" maxlength="4" [(ngModel)]="MachineData.Label.timeout">
                                    </mat-form-field>
                                </td>
                            </tr>
                        </table>
                    </div> -->
                    <form #dockerPopertiesForm="ngForm" (ngSubmit)="SaveJsonData(1, dockerPopertiesForm)">
                        <div fxLayoutGap="5%" fxLayout="row">
                            <div *ngFor="let alignment of DockerPropertiesAlignments" class="docker-properties" fxLayoutGap="10%" fxFlex="50%" fxLayout="column">
                                <div class="docker-properties-column" fxLayout="row" *ngFor="let item of DockerPropertiesCombined[alignment]">
                                    <div [ngClass]="item.type == 'radio' ? 'name-radio-top' : item.type == 'slider' ? 'name-slider-top' : ''" class="docker-properties-name" fxLayout="column" fxFlex="44%">
                                        <label>{{item.name}}</label>
                                    </div>
                                    <div fxLayout="column" fxFlex="56%">
                                        <ng-container *ngIf="item.type == 'dropdown'">
                                            <mat-form-field>
                                                <select (change)="PropertyChange(item)" #dropdownField="ngModel" required disabled="{{item.enable == false}}" matNativeControl name="{{item.id}}" [(ngModel)]="item.selectedValue">
                                                    <option value="">{{item.defaultText}}</option>
                                                    <ng-container *ngFor="let opt of item.options">
                                                        <option [ngValue]="opt.value">{{opt.text}}</option>
                                                    </ng-container>
                                                </select>
                                            </mat-form-field>
                                            <div>
                                                <div class="alert alert-danger" *ngIf="dropdownField.invalid && (dropdownField.dirty || dropdownField.touched || dockerPopertiesForm.submitted)" class="alert alert-danger">
                                                    <div *ngIf="dropdownField.errors.required">
                                                        This field is required
                                                    </div>
                                                </div>
                                                <div class="alert alert-danger" *ngIf="dropdownField?.errors?.required != true && (dropdownField.touched || dropdownField.dirty || dockerPopertiesForm.submitted) && item.selectedValue == item.defaultValue">
                                                    Value should not be {{item.defaultValue}}
                                                </div>
                                            </div>
                                        </ng-container>
                                        <ng-container *ngIf="item.type == 'integer'">
                                            <mat-form-field>
                                                <input #integerField="ngModel" pattern="{{item.pattern}}" required min="{{item.minValue}}" max="{{item.maxValue}}" matNativeControl name="{{item.id}}" type="number" [(ngModel)]="item.selectedValue" />
                                            </mat-form-field>
                                            <div>
                                                <div *ngIf="integerField.invalid && (integerField.dirty || integerField.touched || dockerPopertiesForm.submitted)" class="alert alert-danger">
                                                    <div *ngIf="integerField.errors.required">
                                                        This field is required
                                                    </div>
                                                    <div *ngIf="integerField.errors.pattern">
                                                        Value should be a whole number
                                                    </div>
                                                </div>
                                                <div class="alert alert-danger" *ngIf="integerField?.errors?.required != true && (integerField.touched || integerField.dirty || dockerPopertiesForm.submitted) && item.selectedValue == item.defaultValue">
                                                    Value should not be {{item.defaultValue}}
                                                </div>
                                                <div class="alert alert-danger" *ngIf="integerField?.errors?.required != true && (integerField.touched || integerField.dirty || dockerPopertiesForm.submitted) && item.selectedValue != item.defaultValue && (item.selectedValue > item.maxValue || item.selectedValue < item.minValue) && item.maxValue != null && item.minValue != null">
                                                    Value should be in between {{item.minValue}} and {{item.maxValue}}
                                                </div>
                                                <div class="alert alert-danger" *ngIf="integerField?.errors?.required != true && (integerField.touched || integerField.dirty || dockerPopertiesForm.submitted) && item.selectedValue != item.defaultValue && (item.selectedValue < item.minValue) && item.minValue != null && item.maxValue == null">
                                                    Value should not be less than {{item.minValue}}
                                                </div>
                                            </div>
                                        </ng-container>
                                        <ng-container *ngIf="item.type == 'radio'">
                                            <mat-radio-group disabled="{{item.enable == false}}" #radioField="ngModel" required aria-required="" aria-label="item.defaultText" name="{{item.id}}" [(ngModel)]="item.selectedValue">
                                                <ng-container *ngFor="let opt of item.options">
                                                    <mat-radio-button [value]="opt.value">{{opt.text}}</mat-radio-button>
                                                </ng-container>
                                            </mat-radio-group>
                                            <div>
                                                <div *ngIf="radioField.invalid && (radioField.dirty || radioField.touched || dockerPopertiesForm.submitted)" class="alert alert-danger">
                                                    <div *ngIf="radioField.errors.required">
                                                        This field is required
                                                    </div>
                                                </div>
                                                <div class="alert alert-danger" *ngIf="radioField?.errors?.required != true && (radioField.touched || radioField.dirty || dockerPopertiesForm.submitted) && item.selectedValue == item.defaultValue">
                                                    Value should not be {{item.defaultValue}}
                                                </div>
                                            </div>
                                        </ng-container>
                                        <ng-container *ngIf="item.type == 'slider'">
                                            <mat-slider #sliderField="ngModel" required name="{{item.id}}" thumbLabel [displayWith]="item.defaultText" tickInterval="1" min="{{item.minValue}}" max="{{item.maxValue}}" [(ngModel)]="item.selectedValue"></mat-slider>
                                            <div>
                                                <div *ngIf="sliderField.invalid && (sliderField.dirty || sliderField.touched || dockerPopertiesForm.submitted)" class="alert alert-danger slider">
                                                    <div *ngIf="sliderField.errors.required">
                                                        This field is required
                                                    </div>
                                                </div>
                                                <div class="alert alert-danger slider" *ngIf="sliderField?.errors?.required != true && (sliderField.touched || sliderField.dirty || dockerPopertiesForm.submitted) && item.selectedValue == item.defaultValue">
                                                    Value should not be {{item.defaultValue}}
                                                </div>
                                            </div>
                                        </ng-container>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <!-- <div fxLayout="row">
                            <div id="dvStaticFieldInfo" style="width:100%;">
                                <table style="margin-top:30px" class="example-full-width" cellspacing="10">
                                    <tr *ngFor="let item of DockerProperties">
                                        <td>
                                                <label>{{item.name}}</label>
                                        </td>
                                        <td *ngIf="item.type == 'dropdown'">
                                            <select name="{{item.id}}" [(ngModel)]="item.value">
                                                <option value="">{{item.defaultText}}</option>
                                                <ng-container *ngFor="let opt of item.options">
                                                    <option [ngValue]="opt">{{opt}}</option>
                                                </ng-container>
                                            </select>
                                        </td>
                                        <td *ngIf="item.type == 'integer'">
                                            <input name="{{item.id}}" type="number" [(ngModel)]="item.value" />
                                        </td>
                                        <td *ngIf="item.type == 'radio'">
                                            <mat-radio-group aria-label="item.defaultText" name="{{item.id}}" [(ngModel)]="item.value">
                                                <ng-container *ngFor="let opt of item.options">
                                                    <mat-radio-button [value]="opt">{{opt}}</mat-radio-button>
                                                </ng-container>
                                            </mat-radio-group>
                                        </td>
                                        <td *ngIf="item.type == 'slider'">
                                            <mat-slider name="{{item.id}}" thumbLabel [displayWith]="item.defaultText" tickInterval="1" min="{{item.minValue}}" max="{{item.maxValue}}" [(ngModel)]="item.value"></mat-slider>
                                        </td>
                                    </tr>
                                </table>
                            </div>
                        </div> -->
                        <mat-action-row>
                            <div>
                                <ng-container *ngFor="let msg of dockerPropertiesErrors">
                                    <span style="color:#f44336;font-size: 14px;font-weight: 600">{{msg}}</span>
                                    <br />
                                </ng-container>
                            </div>
                            <button style="height: 36px" type="submit" mat-button color="primary">Save</button>
                            <button type="button" mat-button color="warn" (click)="CancelDockerProperties(dockerPopertiesForm)">Cancel</button>

                        </mat-action-row>
                    </form>
                </mat-expansion-panel>



                <mat-expansion-panel [expanded]="Step==2" (opened)="Step=2;">
                    <mat-expansion-panel-header>
                        <mat-panel-title>
                            Data I/O
                        </mat-panel-title>
                    </mat-expansion-panel-header>
                    <form #myForm="ngForm" novalidate (ngSubmit)="SaveJsonData(2)">
                        <div>
                            <div fxLayout="row" fxFlex="50%" fxFlex.gt-sm="50%">
                                <div fxLayout="column" fxFlex>
                                    <label><b>Input :</b></label>
                                    <table style="width:100%" cellspacing="10">
                                        <tr>
                                            <td colspan="3">
                                                <mat-form-field style="width:90%">
                                                    <select matNativeControl [(ngModel)]="SelectedSchemaInDicomType"
                                                            [ngClass]="(SelectedSchemaInDicomType=='')?'TxtCSS':''"
                                                            (change)="SelectDicomType('I')" [ngModelOptions]="{standalone: true}">
                                                        <option value="">--Please Choose DICOM Input Schema Type --</option>
                                                        <ng-container *ngFor="let propOption of dicomInTypes">
                                                            <option [ngValue]="propOption">{{propOption}}</option>
                                                        </ng-container>
                                                    </select>
                                                </mat-form-field>
                                            </td>
                                        </tr>
                                    </table>
                                    <table *ngIf="SelectedSchemaInDicomType!=''" class="SchemaTable">
                                        <tr *ngIf="SelectedSchemaInDicomType!=''">
                                            <td style="padding:5px;padding-top:10px;width:65%">
                                                <mat-form-field class="example-full-width" style="width:100%;height:40px">
                                                    <input matInput (change)="DataChange()" placeholder="Key"
                                                           [(ngModel)]="customschemaInDicom.value" #name="ngModel" required maxlength="100"
                                                           pattern="^[a-zA-Z0-9][a-zA-Z0-9_-]*$" [ngModelOptions]="{standalone: true}">
                                                </mat-form-field>
                                                <div style="margin:0px" *ngIf="name.invalid && (name.dirty || name.touched || myForm.submitted)" class="alert alert-danger">

                                                    <div *ngIf="name.errors.required">
                                                        Please provide key
                                                    </div>
                                                    <div *ngIf="name.errors?.pattern">
                                                        {{InvalidKeyWarningText}}
                                                    </div>
                                                    <div *ngIf="name.errors.maxlength">
                                                        Key Should be less than or equal to 100 characters.
                                                    </div>
                                                </div>
                                            </td>
                                            <td style="padding-top:20px;width:25%" class="vertical-align-key">
                                                <mat-label>{{customschemaInDicom.key}}</mat-label>
                                            </td>
                                            <td style="width: 10%" class="vertical-align-close">
                                                <mat-icon class="pointer mr-3" style="font-size:20px;float:right"
                                                          (click)="DeleteDicomType('I')" matTooltip="Delete Key">close</mat-icon>
                                            </td>
                                        </tr>
                                        <tr *ngIf="SelectedSchemaInDicomType!='' && schemaInConfig[customschemaInDicom.key]['IsAdditionalInfoNeeded']==true">
                                            <td colspan="3" style="padding:5px;padding-top:0px">
                                                <div fxLayout="row">
                                                    <mat-form-field class="example-full-width CustomControl"
                                                                    style="width:448px;height:50px;margin-bottom:20px">
                                                        <textarea (change)="DataChange()" placeholder="Please enter description" rows="2"
                                                                  cols="25" matInput #additionalInfo maxlength="286"
                                                                  [(ngModel)]="customschemaInDicom['AdditionalInfo']"
                                                                  [ngModelOptions]="{standalone: true}"></textarea>
                                                        <mat-hint align="end">{{additionalInfo.value.length}} / 286</mat-hint>
                                                    </mat-form-field>
                                                </div>
                                            </td>
                                        </tr>
                                        <tr *ngIf="SelectedSchemaInDicomType!='' && schemaInConfig[customschemaInDicom.key]['IsChildSeriesExists']==true">
                                            <td [attr.colspan]="3" style="display:block;padding:5px;padding-top:10px">
                                                <div style="display: block;float:left;">
                                                    <button type="button" style="border:1px solid;margin-bottom:5px;margin-right:3px" mat-button
                                                            color="primary"
                                                            (click)="AddChildSeriesDicom(SelectedSchemaInDicomType)">
                                                        {{schemaInConfig[customschemaInDicom.key]['btnChildSeriesText']}}
                                                    </button>
                                                    <button type="button" *ngIf="schemaInConfig[customschemaInDicom.key]['IsChildMultiphaseExists']==true"
                                                            style="border:1px solid" mat-button color="primary"
                                                            (click)="AddChildMultiphaseSeriesDicom()">
                                                        {{schemaInConfig[customschemaInDicom.key]['btnChildMultiphase']}}
                                                    </button>
                                                </div>
                                            </td>
                                        </tr>
                                        <tr *ngIf="SelectedSchemaInDicomType!='' && schemaInConfig[customschemaInDicom.key]['IsChildSeriesExists']==true">
                                            <td [attr.colspan]="3" style="padding:5px;padding-top:10px;padding-left: 50px">
                                                <table style="width:100%">
                                                    <tr *ngFor="let child of customschemaInDicom.ChildSeries; let j = index">
                                                        <td style="width: 75%">
                                                            <mat-form-field class="example-full-width" style="width:100%;height:40px">
                                                                <input required pattern="^[a-zA-Z0-9][a-zA-Z0-9_-]*$" (change)="DataChange()" matInput
                                                                       placeholder="{{schemaInConfig[customschemaInDicom.key]['ChildSeriesPlaceholder']}}"
                                                                       maxlength="100" [(ngModel)]="child.key" #name="ngModel"
                                                                       [ngModelOptions]="{standalone: true}">
                                                            </mat-form-field>
                                                            <div style="margin:0px" *ngIf="name.invalid && (name.dirty || name.touched || myForm.submitted)"
                                                                 class="alert alert-danger">
                                                                <div *ngIf="name.errors.required">
                                                                    Sub Key is required.
                                                                </div>
                                                                <div *ngIf="name.errors?.pattern">
                                                                    {{InvalidSubKeyWarningText}}
                                                                </div>
                                                                <div *ngIf="name.errors.maxlength">
                                                                    Sub Key should be less than or equal to 100 characters.
                                                                </div>
                                                            </div>
                                                            <br />
                                                            <mat-form-field class="example-full-width CustomControl" style="width:100%">
                                                                <textarea (change)="DataChange()" placeholder="Please enter description"
                                                                          rows="2" cols="20" matInput #additionalInfo maxlength="100"
                                                                          [(ngModel)]="child.value"
                                                                          [ngModelOptions]="{standalone: true}"></textarea>
                                                                <mat-hint align="end">{{additionalInfo.value.length}} / 100</mat-hint>
                                                            </mat-form-field>
                                                        </td>
                                                        <td style="width: 20%" class="vertical-align-child-close">
                                                            <mat-icon class="pointer mr-3 ChildDelete" style="font-size:20px;"
                                                                      (click)="DeleteChildSeriesDicom(j,'I')" matTooltip="Delete Child Key">
                                                                close
                                                            </mat-icon>
                                                        </td>
                                                    </tr>
                                                </table>
                                                <table style="width:100%" *ngIf="schemaInConfig[customschemaInDicom.key]['IsChildMultiphaseExists']==true">
                                                    <tr *ngFor="let child of customschemaInDicom.ChildMultiphaseSeries; let j = index">
                                                        <td style="width: 75%">
                                                            <mat-form-field style="width:100%;height: 40px;">
                                                                <input required pattern="^[a-zA-Z0-9][a-zA-Z0-9_-]*$" (change)="DataChange()" matInput placeholder="Multi_Phase key"
                                                                       maxlength="20" [(ngModel)]="child.key" #name="ngModel"
                                                                       [ngModelOptions]="{standalone: true}">
                                                            </mat-form-field>
                                                            <div style="margin:0px" *ngIf="name.invalid && (name.dirty || name.touched || myForm.submitted)"
                                                                 class="alert alert-danger">
                                                                <div *ngIf="name.errors.required">
                                                                    Sub Key is required.
                                                                </div>
                                                                <div *ngIf="name.errors?.pattern">
                                                                    {{InvalidSubKeyWarningText}}
                                                                </div>
                                                                <div *ngIf="name.errors.maxlength">
                                                                    Sub Key should be less than or equal to 100 characters.
                                                                </div>
                                                            </div>
                                                            <br />
                                                            <mat-form-field class="example-full-width CustomControl" style="width:100%">
                                                                <textarea (change)="DataChange()" placeholder="Please enter description"
                                                                          rows="2" cols="20" matInput #additionalInfo maxlength="100"
                                                                          [(ngModel)]="child.value"
                                                                          [ngModelOptions]="{standalone: true}"></textarea>
                                                                <mat-hint align="end">{{additionalInfo.value.length}} / 100</mat-hint>
                                                            </mat-form-field>
                                                        </td>
                                                        <td style="width: 20%" class="vertical-align-child-close">
                                                            <mat-icon class="pointer mr-3 ChildDelete" style="font-size:20px;"
                                                                      (click)="DeleteChildMultiphaseSeriesDicom(j,'I')"
                                                                      matTooltip="Delete Child Key">
                                                                close
                                                            </mat-icon>
                                                        </td>
                                                    </tr>
                                                </table>
                                            </td>
                                        </tr>
                                    </table>

                                    <table style="width:100%" cellspacing="10">
                                        <tr>
                                            <td colspan="3">
                                                <mat-form-field style="width:90%">
                                                    <select matNativeControl [(ngModel)]="SelectedSchemaInType"
                                                            [ngClass]="(SelectedSchemaInType =='')?'TxtCSS':''"
                                                            (ngModelChange)="SelectSchemaType('schema-in','NP')"
                                                            [ngModelOptions]="{standalone: true}">
                                                        <option [ngValue]="''">--Please Choose NON-DICOM Input Schema Type--</option>
                                                        <ng-container *ngFor="let propOption of primitivInTypes">
                                                            <option *ngIf="SelectedSchemaInItems.indexOf(propOption) < 0"
                                                                    [ngValue]="propOption">
                                                                {{propOption}}
                                                            </option>
                                                        </ng-container>
                                                    </select>
                                                </mat-form-field>
                                            </td>
                                        </tr>
                                    </table>
                                    <table *ngFor="let item of customSchemaInDict; let i = index" class="example-full-width SchemaTable"
                                           cellspacing="10">
                                        <tr>
                                            <td style="padding:5px;padding-top:10px;width:65%">
                                                <mat-form-field class="example-full-width" style="width:100%;height:40px">
                                                    <input matInput (change)="DataChange()" placeholder="Key" [(ngModel)]="item.value"
                                                           [ngModelOptions]="{standalone: true}" #name="ngModel" required maxlength="100"
                                                           pattern="^[a-zA-Z0-9][a-zA-Z0-9_-]*$">
                                                </mat-form-field>
                                                <div style="margin:0px" *ngIf="name.invalid && (name.dirty || name.touched || myForm.submitted)" class="alert alert-danger">
                                                    <div *ngIf="name.errors.required">
                                                        Please provide key.
                                                    </div>
                                                    <div *ngIf="name.errors?.pattern">
                                                        {{InvalidKeyWarningText}}
                                                    </div>
                                                    <div *ngIf="name.errors.maxlength">
                                                        Key should be less than or equal to 100 characters.
                                                    </div>
                                                </div>
                                            </td>
                                            <td style="padding-top:20px;width:25%" class="vertical-align-key">
                                                <mat-label>{{item.key}}</mat-label>
                                            </td>
                                            <td style="width: 10%" class="vertical-align-close">
                                                <mat-icon class="pointer mr-3" style="font-size:20px;float:right"
                                                          (click)="DeleteDynamicSchemaKey('schema-in',i,item.value,'NP')" matTooltip="Delete Key">
                                                    close
                                                </mat-icon>
                                            </td>
                                        </tr>
                                        <tr *ngIf="schemaInConfig[item.key]['IsAdditionalInfoNeeded']==true">
                                            <td colspan="3" style="padding:5px;padding-top:0px">
                                                <div fxLayout="row">
                                                    <mat-form-field class="example-full-width CustomControl"
                                                                    style="width:448px;height:50px;margin-bottom:20px">
                                                        <textarea (change)="DataChange()" placeholder="Please enter description" rows="2"
                                                                  cols="25" matInput #additionalInfo maxlength="286"
                                                                  [(ngModel)]="item['AdditionalInfo']"
                                                                  [ngModelOptions]="{standalone: true}"></textarea>
                                                        <mat-hint align="end">{{additionalInfo.value.length}} / 286</mat-hint>
                                                    </mat-form-field>
                                                </div>
                                            </td>
                                        </tr>
                                        <tr>
                                            <td colspan="3" style="padding:5px;padding-top:0px">
                                                <table>
                                                    <tr *ngIf="schemaInConfig[item.key]['IsDefaultValExists']==true">
                                                        <td>
                                                            <mat-label>{{schemaInConfig[item.key]['DefaultValLabel']}}</mat-label>
                                                        </td>
                                                        <td>
                                                            <mat-form-field class="example-full-width" style="width:100px">
                                                                <input matInput (change)="DataChange()" [(ngModel)]="item['DefaultValue']"
                                                                       [ngModelOptions]="{standalone: true}" #name="ngModel" required
                                                                       maxlength="200" pattern="[-+]?\d*$">
                                                            </mat-form-field>
                                                            <div style="margin:0px" *ngIf="name.invalid && (name.dirty || name.touched)"
                                                                 class="alert alert-danger">
                                                                <div *ngIf="name.errors.required">
                                                                    Default Value is required.
                                                                </div>
                                                                <div *ngIf="name.errors?.pattern">
                                                                    Please Provide Valid Default Value
                                                                </div>
                                                                <div *ngIf="name.errors.maxlength">
                                                                    Default Value Should not be more than 10 digits
                                                                </div>
                                                            </div>
                                                        </td>
                                                        <td></td>
                                                    </tr>
                                                    <tr *ngIf="schemaInConfig[item.key]['IsMinValExists']==true">
                                                        <td>
                                                            <mat-label>{{schemaInConfig[item.key]['MinValLabel']}}</mat-label>
                                                        </td>
                                                        <td>
                                                            <mat-form-field class="example-full-width" style="width:100px">
                                                                <input matInput (change)="DataChange()" #name="ngModel"
                                                                       [ngModelOptions]="{standalone: true}" required maxlength="10"
                                                                       pattern="[-+]?\d*$" [(ngModel)]="item['MinValue']">
                                                            </mat-form-field>
                                                            <div *ngIf="name.invalid && (name.dirty || name.touched)"
                                                                 class="alert alert-danger">
                                                                <div *ngIf="name.errors.required">
                                                                    Minimum Value is required.
                                                                </div>
                                                                <div *ngIf="name.errors?.pattern">
                                                                    Please Provide Valid Minimum Value
                                                                </div>
                                                                <div *ngIf="name.errors.maxlength">
                                                                    Minimum Value Should not be more than 10 digits
                                                                </div>
                                                            </div>
                                                        </td>
                                                        <td></td>
                                                    </tr>
                                                    <tr *ngIf="schemaInConfig[item.key]['IsMaxValExists']==true">
                                                        <td>
                                                            <mat-label>{{schemaInConfig[item.key]['MaxValLabel']}}</mat-label>

                                                        </td>
                                                        <td>
                                                            <mat-form-field class="example-full-width" style="width:100px">
                                                                <input matInput (change)="DataChange()" [(ngModel)]="item['MaxValue']"
                                                                       [ngModelOptions]="{standalone: true}" #name="ngModel" required
                                                                       maxlength="10" pattern="[-+]?\d*$">
                                                            </mat-form-field>
                                                            <div *ngIf="name.invalid && (name.dirty || name.touched)"
                                                                 class="alert alert-danger">
                                                                <div *ngIf="name.errors.required">
                                                                    Maximum Value is required.
                                                                </div>
                                                                <div *ngIf="name.errors?.pattern">
                                                                    Please Provide Valid Maximum Value
                                                                </div>
                                                                <div *ngIf="name.errors.maxlength">
                                                                    Maximum Value Should not be more than 10 digits
                                                                </div>
                                                            </div>
                                                        </td>
                                                        <td></td>
                                                    </tr>
                                                    <tr *ngIf="schemaInConfig[item.key]['IsMaxLengthExists']==true">
                                                        <td>
                                                            <mat-label>{{schemaInConfig[item.key]['MaxLengthLabel']}}</mat-label>
                                                        </td>
                                                        <td>
                                                            <mat-form-field class="example-full-width" style="width:100px">
                                                                <input matInput (change)="DataChange()" [(ngModel)]="item['MaxLength']"
                                                                       [ngModelOptions]="{standalone: true}" required maxlength="10"
                                                                       pattern="[1-9]\d*$">
                                                            </mat-form-field>
                                                            <div *ngIf="name.invalid && (name.dirty || name.touched)"
                                                                 class="alert alert-danger">
                                                                <div *ngIf="name.errors.required">
                                                                    Maximum Length is required.
                                                                </div>
                                                                <div *ngIf="name.errors?.pattern">
                                                                    Please Provide Valid Max Length
                                                                </div>
                                                                <div *ngIf="name.errors.maxlength">
                                                                    Maximum Length Should not be more than 10 digits
                                                                </div>
                                                            </div>
                                                        </td>
                                                        <td></td>
                                                    </tr>
                                                </table>
                                            </td>
                                        </tr>
                                        <tr *ngIf="schemaInConfig[item.key]['IsChildSeriesExists']==true">
                                            <td [attr.colspan]="3" style="display:block;padding:5px;padding-top:10px">
                                                <div style="display: block;float:left;">
                                                    <button type="button" style="border:1px solid;margin-bottom:5px;margin-right:3px" mat-button
                                                            color="primary"
                                                            (click)="AddChildSeries(i,'U')">
                                                        {{schemaInConfig[item.key]['btnChildSeriesText']}}
                                                    </button>
                                                    <button type="button" *ngIf="schemaInConfig[item.key]['IsChildMultiphaseExists']==true"
                                                            style="border:1px solid" mat-button color="primary"
                                                            (click)="AddChildMultiphaseSeries(i,'U')">
                                                        {{schemaInConfig[item.key]['btnChildMultiphase']}}
                                                    </button>
                                                </div>
                                            </td>
                                        </tr>
                                        <tr *ngIf="schemaInConfig[item.key]['IsChildSeriesExists']==true">
                                            <td [attr.colspan]="3" style="padding:5px;padding-top:10px;padding-left: 50px">
                                                <table>
                                                    <tr *ngFor="let child of item.ChildSeries; let j = index">
                                                        <td style="width: 75%">
                                                            <mat-form-field class="example-full-width" style="width:90%;height:40px">
                                                                <input (change)="DataChange()" matInput
                                                                       placeholder="{{schemaInConfig[item.key]['ChildSeriesPlaceholder']}}"
                                                                       [(ngModel)]="child.key"
                                                                       [ngModelOptions]="{standalone: true}" #name="ngModel" required
                                                                       maxlength="100" pattern="^[a-zA-Z0-9][a-zA-Z0-9_-]*$">
                                                            </mat-form-field>
                                                            <div style="margin:0px" *ngIf="name.invalid && (name.dirty || name.touched || myForm.submitted)"
                                                                 class="alert alert-danger">
                                                                <div *ngIf="name.errors.required">
                                                                    Sub Key is required.
                                                                </div>
                                                                <div *ngIf="name.errors?.pattern">
                                                                    {{InvalidSubKeyWarningText}}
                                                                </div>
                                                                <div *ngIf="name.errors.maxlength">
                                                                    Sub Key should be less than or equal to 100 characters.
                                                                </div>
                                                            </div>
                                                            <br />
                                                            <mat-form-field class="example-full-width CustomControl" style="width:240px">
                                                                <textarea (change)="DataChange()" placeholder="Please enter description"
                                                                          rows="2" cols="20" matInput #additionalInfo maxlength="100"
                                                                          [(ngModel)]="child.value"
                                                                          [ngModelOptions]="{standalone: true}"></textarea>
                                                                <mat-hint align="end">{{additionalInfo.value.length}} / 100</mat-hint>
                                                            </mat-form-field>
                                                            <table>
                                                                <tr *ngIf="schemaInConfig[item.key]['IsDefaultValExists']==true">
                                                                    <td>
                                                                        <mat-label>
                                                                            {{schemaInConfig[item.key]['DefaultValLabel']}}
                                                                        </mat-label>
                                                                    </td>
                                                                    <td>
                                                                        <mat-form-field class="example-full-width" style="width:100px">
                                                                            <input matInput (change)="DataChange()" maxlength="200"
                                                                                   [(ngModel)]="child['DefaultValue']"
                                                                                   [ngModelOptions]="{standalone: true}"
                                                                                   #name="ngModel"
                                                                                   required pattern="[-+]?\d*$">
                                                                        </mat-form-field>
                                                                        <div style="margin:0px" *ngIf="name.invalid && (name.dirty || name.touched)"
                                                                             class="alert alert-danger">
                                                                            <div *ngIf="name.errors.required">
                                                                                Default Value is required.
                                                                            </div>
                                                                            <div *ngIf="name.errors?.pattern">
                                                                                Please Provide Valid Default Value
                                                                            </div>
                                                                            <div *ngIf="name.errors.maxlength">
                                                                                Default Value should not be more than 10 digits length
                                                                            </div>
                                                                        </div>
                                                                    </td>
                                                                </tr>
                                                                <tr *ngIf="schemaInConfig[item.key]['IsMinValExists']==true">
                                                                    <td>
                                                                        <mat-label>{{schemaInConfig[item.key]['MinValLabel']}}</mat-label>

                                                                    </td>
                                                                    <td>
                                                                        <mat-form-field class="example-full-width" style="width:100px">
                                                                            <input matInput (change)="DataChange()"
                                                                                   [(ngModel)]="child['MinValue']"
                                                                                   [ngModelOptions]="{standalone: true}" #name="ngModel"
                                                                                   required maxlength="10" pattern="[-+]?\d*$">
                                                                        </mat-form-field>
                                                                        <div *ngIf="name.invalid && (name.dirty || name.touched)"
                                                                             class="alert alert-danger">
                                                                            <div *ngIf="name.errors.required">
                                                                                Minimum Value is required.
                                                                            </div>
                                                                            <div *ngIf="name.errors?.pattern">
                                                                                Please Provide Valid Minimum Value
                                                                            </div>
                                                                            <div *ngIf="name.errors.maxlength">
                                                                                Min Value should not be more than 10 digits length
                                                                            </div>
                                                                        </div>
                                                                    </td>
                                                                    <td></td>
                                                                </tr>
                                                                <tr *ngIf="schemaInConfig[item.key]['IsMaxValExists']==true">
                                                                    <td>
                                                                        <mat-label>{{schemaInConfig[item.key]['MaxValLabel']}}</mat-label>

                                                                    </td>
                                                                    <td>
                                                                        <mat-form-field class="example-full-width" style="width:100px">
                                                                            <input matInput (change)="DataChange()"
                                                                                   [(ngModel)]="child['MaxValue']"
                                                                                   [ngModelOptions]="{standalone: true}"
                                                                                   #name="ngModel"
                                                                                   required maxlength="100" pattern="[-+]?\d*$">
                                                                        </mat-form-field>
                                                                        <div *ngIf="name.invalid && (name.dirty || name.touched)"
                                                                             class="alert alert-danger">
                                                                            <div *ngIf="name.errors.required">
                                                                                Max Value is required.
                                                                            </div>
                                                                            <div *ngIf="name.errors?.pattern">
                                                                                Please Provide Valid Maximum Value
                                                                            </div>
                                                                            <div *ngIf="name.errors.maxlength">
                                                                                Max Value should not be more than 10 digits length
                                                                            </div>
                                                                        </div>
                                                                    </td>
                                                                    <td></td>
                                                                </tr>
                                                                <tr *ngIf="schemaInConfig[item.key]['IsMaxLengthExists']==true">
                                                                    <td>
                                                                        <mat-label>
                                                                            {{schemaInConfig[item.key]['MaxLengthLabel']}}
                                                                        </mat-label>
                                                                    </td>
                                                                    <td>
                                                                        <mat-form-field class="example-full-width" style="width:100px">
                                                                            <input matInput (change)="DataChange()"
                                                                                   [(ngModel)]="child['MaxLength']"
                                                                                   [ngModelOptions]="{standalone: true}" #name="ngModel"
                                                                                   required maxlength="100" pattern="[1-9]\d*$">
                                                                        </mat-form-field>
                                                                        <div *ngIf="name.invalid && (name.dirty || name.touched)"
                                                                             class="alert alert-danger">
                                                                            <div *ngIf="name.errors.required">
                                                                                Max Length is required.
                                                                            </div>
                                                                            <div *ngIf="name.errors?.pattern">
                                                                                Please Provide Valid length
                                                                            </div>
                                                                            <div *ngIf="name.errors.maxlength">
                                                                                Sub Key should be less than or equal to 100 characters.
                                                                            </div>
                                                                        </div>
                                                                    </td>
                                                                    <td></td>
                                                                </tr>
                                                            </table>
                                                        </td>
                                                        <td style="vertical-align:top;padding-top:65px;width: 20%">
                                                            <mat-icon class="pointer mr-3 ChildDelete" style="font-size:20px;"
                                                                      (click)="DeleteChildSeries('schema-in',i,j,'U')"
                                                                      matTooltip="Delete Child Key">
                                                                close
                                                            </mat-icon>
                                                        </td>
                                                    </tr>
                                                </table>
                                                <table *ngIf="schemaInConfig[item.key]['IsChildMultiphaseExists']==true">
                                                    <tr *ngFor="let child of item.ChildMultiphaseSeries; let j = index">
                                                        <td style="width: 75%">
                                                            <mat-form-field class="example-full-width" style="width:90%;height:40px">
                                                                <input (change)="DataChange()" matInput placeholder="Multi_Phase key"
                                                                       maxlength="20" [(ngModel)]="child.key">
                                                            </mat-form-field>

                                                            <br />
                                                            <mat-form-field class="example-full-width CustomControl" style="width:240px">
                                                                <textarea (change)="DataChange()" placeholder="Please enter description"
                                                                          rows="2" cols="20" matInput #additionalInfo maxlength="100"
                                                                          [(ngModel)]="child.value"
                                                                          [ngModelOptions]="{standalone: true}"></textarea>
                                                                <mat-hint align="end">{{additionalInfo.value.length}} / 100</mat-hint>
                                                            </mat-form-field>
                                                        </td>
                                                        <td class="vertical-align-child-close" style="width: 20%">
                                                            <mat-icon class="pointer mr-3 ChildDelete" style="font-size:20px;"
                                                                      (click)="DeleteChildMultiphaseSeries('schema-in',i,j,'U')"
                                                                      matTooltip="Delete Child Key">close</mat-icon>
                                                        </td>
                                                    </tr>
                                                </table>
                                            </td>
                                        </tr>
                                    </table>
                                </div>
                            </div>
                            <div fxLayout="row" fxFlex="50%" fxFlex.gt-sm="50%">
                                <div fxLayout="column" fxFlex>
                                    <label><b>Output :</b></label>
                                    <table style="width:100%" cellspacing="10">
                                        <tr>
                                            <td colspan="3">
                                                <mat-form-field style="width:90%">
                                                    <select matNativeControl [(ngModel)]="SelectedSchemaOutDicomType"
                                                            [ngClass]="(SelectedSchemaOutDicomType=='')?'TxtCSS':''"
                                                            (change)="SelectDicomType('O')" [ngModelOptions]="{standalone: true}">
                                                        <option value="">--Please Choose DICOM Output Schema Type --</option>
                                                        <ng-container *ngFor="let propOption of dicomOutTypes">
                                                            <option [ngValue]="propOption">{{propOption}}</option>
                                                        </ng-container>
                                                    </select>
                                                </mat-form-field>
                                            </td>
                                        </tr>
                                    </table>
                                    <table *ngIf="SelectedSchemaOutDicomType!=''" class="SchemaTable">
                                        <tr *ngIf="SelectedSchemaOutDicomType!=''">
                                            <td style="padding:5px;padding-top:10px;width:65%">
                                                <mat-form-field class="example-full-width" style="width:100%;height:40px">
                                                    <input matInput (change)="DataChange()" placeholder="Key" maxlength="200"
                                                           [(ngModel)]="customschemaOutDicom.value" #name="ngModel" required
                                                           pattern="^[a-zA-Z0-9][a-zA-Z0-9_-]*$" [ngModelOptions]="{standalone: true}">
                                                </mat-form-field>
                                                <div style="margin:0px" *ngIf="name.invalid && (name.dirty || name.touched || myForm.submitted)" class="alert alert-danger">
                                                    <div *ngIf="name.errors.required">
                                                        Please provide key
                                                    </div>
                                                    <div *ngIf="name.errors?.pattern">
                                                        {{InvalidKeyWarningText}}
                                                    </div>
                                                    <div *ngIf="name.errors.maxlength">
                                                        Key Should be less than or equal to 100 characters.
                                                    </div>
                                                </div>
                                            </td>
                                            <td style="padding-top:20px; width: 25%" class="vertical-align-key">
                                                <mat-label>{{customschemaOutDicom.key}}</mat-label>
                                            </td>
                                            <td style="width: 10%" class="vertical-align-close">
                                                <mat-icon class="pointer mr-3" style="font-size:20px;float:right"
                                                          (click)="DeleteDicomType('O')" matTooltip="Delete Key">close</mat-icon>
                                            </td>
                                        </tr>
                                        <tr *ngIf="SelectedSchemaOutDicomType!='' && schemaOutConfig[customschemaOutDicom.key]['IsAdditionalInfoNeeded']==true">
                                            <td colspan="3" style="padding:5px;padding-top:0px">
                                                <div fxLayout="row">
                                                    <mat-form-field class="example-full-width CustomControl"
                                                                    style="width:448px;height:50px;margin-bottom:20px">
                                                        <textarea (change)="DataChange()" placeholder="Please enter description" rows="2"
                                                                  cols="25" matInput #additionalInfo maxlength="286"
                                                                  [(ngModel)]="customschemaOutDicom['AdditionalInfo']"
                                                                  [ngModelOptions]="{standalone: true}"></textarea>
                                                        <mat-hint align="end">{{additionalInfo.value.length}} / 286</mat-hint>
                                                    </mat-form-field>
                                                </div>
                                            </td>
                                        </tr>
                                        <tr *ngIf="SelectedSchemaOutDicomType!='' && schemaOutConfig[customschemaOutDicom.key]['IsChildSeriesExists']==true">
                                            <td [attr.colspan]="3" style="display:block;padding:5px;padding-top:10px">
                                                <div style="display: block;float:left;">
                                                    <button type="button" style="border:1px solid;margin-bottom:5px;margin-right:3px" mat-button
                                                            color="primary"
                                                            (click)="AddChildSeriesDicomOut(SelectedSchemaOutDicomType)">
                                                        {{schemaOutConfig[customschemaOutDicom.key]['btnChildSeriesText']}}
                                                    </button>
                                                </div>
                                            </td>
                                        </tr>
                                        <tr *ngIf="SelectedSchemaOutDicomType!='' && schemaOutConfig[customschemaOutDicom.key]['IsChildSeriesExists']==true">
                                            <td [attr.colspan]="3" style="padding:5px;padding-top:10px;padding-left: 50px">
                                                <table style="width:100%">
                                                    <tr *ngFor="let child of customschemaOutDicom.ChildSeries; let j = index">
                                                        <td style="width: 75%">
                                                            <mat-form-field class="example-full-width" style="width:100%;height:40px">
                                                                <input required pattern="^[a-zA-Z0-9][a-zA-Z0-9_-]*$" (change)="DataChange()" matInput
                                                                       placeholder="{{schemaOutConfig[customschemaOutDicom.key]['ChildSeriesPlaceholder']}}"
                                                                       maxlength="100" [(ngModel)]="child.key" #name="ngModel"
                                                                       [ngModelOptions]="{standalone: true}">
                                                            </mat-form-field>
                                                            <div style="margin:0px" *ngIf="name.invalid && (name.dirty || name.touched || myForm.submitted)"
                                                                 class="alert alert-danger">
                                                                <div *ngIf="name.errors.required">
                                                                    Sub Key is required.
                                                                </div>
                                                                <div *ngIf="name.errors?.pattern">
                                                                    {{InvalidSubKeyWarningText}}
                                                                </div>
                                                                <div *ngIf="name.errors.maxlength">
                                                                    Sub Key should be less than or equal to 100 characters.
                                                                </div>
                                                            </div>
                                                            <br />
                                                            <mat-form-field class="example-full-width CustomControl" style="width:100%">
                                                                <textarea (change)="DataChange()" placeholder="Please enter description"
                                                                          rows="2" cols="20" matInput #additionalInfo maxlength="100"
                                                                          [(ngModel)]="child.value"
                                                                          [ngModelOptions]="{standalone: true}"></textarea>
                                                                <mat-hint align="end">{{additionalInfo.value.length}} / 100</mat-hint>
                                                            </mat-form-field>
                                                        </td>
                                                        <td style="width: 20%" class="vertical-align-child-close">
                                                            <mat-icon class="pointer mr-3 ChildDelete" style="font-size:20px;"
                                                                      (click)="DeleteChildSeriesDicom(j,'O')" matTooltip="Delete Child Key">
                                                                close
                                                            </mat-icon>
                                                        </td>
                                                    </tr>
                                                </table>

                                            </td>
                                        </tr>
                                    </table>
                                    <table style="width:100%" cellspacing="10">
                                        <tr>
                                            <td colspan="3">
                                                <mat-form-field style="width:90%">
                                                    <select matNativeControl [(ngModel)]="SelectedSchemaOutType"
                                                            [ngClass]="(SelectedSchemaOutType =='')?'TxtCSS':''"
                                                            (ngModelChange)="SelectSchemaType('schema-out','NP')"
                                                            [ngModelOptions]="{standalone: true}">
                                                        <option [ngValue]="''">--Please Choose NON-DICOM Out Schema Type--</option>
                                                        <ng-container *ngFor="let propOption of primitivOutFileTypes">
                                                            <option [ngValue]="propOption">{{propOption}}</option>
                                                        </ng-container>
                                                    </select>
                                                </mat-form-field>
                                            </td>
                                        </tr>
                                    </table>
                                    <table *ngFor="let item of customSchemaOutDict; let i = index" class="example-full-width SchemaTable"
                                           cellspacing="10">
                                        <tr>
                                            <td style="padding:5px;padding-top:10px;width:65%">
                                                <mat-form-field class="example-full-width" style="width:100%;height:40px">
                                                    <input matInput (change)="DataChange()" placeholder="Key" [(ngModel)]="item.value"
                                                           [ngModelOptions]="{standalone: true}" #name="ngModel" required maxlength="100"
                                                           pattern="^[a-zA-Z0-9][a-zA-Z0-9_-]*$">
                                                </mat-form-field>
                                                <div style="margin:0px" *ngIf="name.invalid && (name.dirty || name.touched || myForm.submitted)" class="alert alert-danger">
                                                    <div *ngIf="name.errors.required">
                                                        Please provide key
                                                    </div>
                                                    <div *ngIf="name.errors?.pattern">
                                                        {{InvalidKeyWarningText}}
                                                    </div>
                                                    <div *ngIf="name.errors.maxlength">
                                                        Sub Key should be less than or equal to 100 characters.
                                                    </div>
                                                </div>
                                            </td>
                                            <td style="padding-top:20px; width: 25%" class="vertical-align-key">
                                                <mat-label>{{item.key}}</mat-label>
                                            </td>
                                            <td style="width: 10%" class="vertical-align-close">
                                                <mat-icon class="pointer mr-3" style="font-size:20px;float:right"
                                                          (click)="DeleteDynamicSchemaKey('schema-out',i,item.value,'NP')"
                                                          matTooltip="Delete Key">
                                                    close
                                                </mat-icon>
                                            </td>
                                        </tr>
                                        <tr *ngIf="schemaOutConfig[item.key]['IsImageTypeNeeded']==true">
                                            <td colspan="3" style="padding:5px;padding-top:0px">
                                                <mat-label>Image Type</mat-label> &nbsp;&nbsp;&nbsp;
                                                <mat-form-field style="width:40%">
                                                    <select matNativeControl [(ngModel)]="item['ImageType']"
                                                            [ngModelOptions]="{standalone: true}">
                                                        <option value="image/jpeg">image/jpeg</option>
                                                        <option value="image/jpeg">image/png</option>
                                                    </select>
                                                </mat-form-field>
                                            </td>
                                        </tr>
                                        <tr *ngIf="schemaOutConfig[item.key]['IsAdditionalInfoNeeded']==true">
                                            <td colspan="3" style="padding:5px;padding-top:0px">
                                                <div fxLayout="row">
                                                    <mat-form-field class="example-full-width CustomControl"
                                                                    style="width:448px;height:50px;margin-bottom:20px">
                                                        <textarea (change)="DataChange()" placeholder="Please enter description" rows="2"
                                                                  cols="25" matInput #additionalInfo maxlength="286"
                                                                  [(ngModel)]="item['AdditionalInfo']"
                                                                  [ngModelOptions]="{standalone: true}"></textarea>
                                                        <mat-hint align="end">{{additionalInfo.value.length}} / 286</mat-hint>
                                                    </mat-form-field>
                                                </div>
                                            </td>
                                        </tr>
                                    </table>
                                    <table style="width:100%" cellspacing="10">
                                        <tr>
                                            <td colspan="3">
                                                <mat-form-field style="width:90%">
                                                    <select matNativeControl [(ngModel)]="SelectedSchemaOutFinding"
                                                            [ngClass]="(SelectedSchemaOutFinding =='')?'TxtCSS':''"
                                                            (ngModelChange)="SelectSchemaType('schema-out','SOF')"
                                                            [ngModelOptions]="{standalone: true}">
                                                        <option [ngValue]="''">--Please Choose Findings--</option>
                                                        <ng-container *ngFor="let propOption of primitivOutFinding">
                                                            <option [ngValue]="propOption">{{propOption}}</option>
                                                        </ng-container>
                                                    </select>
                                                </mat-form-field>
                                            </td>
                                        </tr>
                                    </table>
                                    <table *ngFor="let item of customSchemaOutFindings; let i = index"
                                           class="example-full-width SchemaTable" cellspacing="10">
                                        <tr>
                                            <td style="padding:5px;padding-top:10px;width:65%">
                                                <mat-form-field class="example-full-width" style="width:100%;height:40px">
                                                    <input matInput (change)="DataChange()" placeholder="Key" [(ngModel)]="item.value"
                                                           [ngModelOptions]="{standalone: true}" #name="ngModel" required maxlength="100"
                                                           pattern="^[a-zA-Z0-9][a-zA-Z0-9_-]*$">
                                                </mat-form-field>
                                                <div style="margin:0px" *ngIf="name.invalid && (name.dirty || name.touched || myForm.submitted)" class="alert alert-danger">
                                                    <div *ngIf="name.errors.required">
                                                        Please provide key
                                                    </div>
                                                    <div *ngIf="name.errors?.pattern">
                                                        {{InvalidKeyWarningText}}
                                                    </div>
                                                    <div *ngIf="name.errors.maxlength">
                                                        Key should be less than or equal to 100 characters.
                                                    </div>
                                                </div>
                                            </td>
                                            <td style="padding-top:20px; width: 25%" class="vertical-align-key">
                                                <mat-label>{{item.key}}</mat-label>
                                            </td>
                                            <td style="width: 10%" class="vertical-align-close">
                                                <mat-icon class="pointer mr-3" style="font-size:20px;float:right"
                                                          (click)="DeleteDynamicSchemaKey('schema-out',i,item.value,'SOF')"
                                                          matTooltip="Delete Key">
                                                    close
                                                </mat-icon>
                                            </td>
                                        </tr>
                                        <tr *ngIf="schemaOutConfig[item.key]['IsAdditionalInfoNeeded']==true">
                                            <td colspan="3" style="padding:5px;padding-top:0px">
                                                <div fxLayout="row">
                                                    <mat-form-field class="example-full-width CustomControl"
                                                                    style="width:448px;height:50px;margin-bottom:20px">
                                                        <textarea (change)="DataChange()" placeholder="Please enter description" rows="2"
                                                                  cols="25" matInput #additionalInfo maxlength="286"
                                                                  [(ngModel)]="item['AdditionalInfo']"
                                                                  [ngModelOptions]="{standalone: true}"></textarea>
                                                        <mat-hint align="end">{{additionalInfo.value.length}} / 286</mat-hint>
                                                    </mat-form-field>
                                                </div>
                                            </td>
                                        </tr>
                                    </table>
                                </div>
                            </div>

                        </div>
                        <mat-action-row>
                            <div>
                                <ng-container *ngFor="let msg of schemaInErrorMsgs">
                                    <span style="color:#f44336;font-size: 14px;font-weight: 600">{{msg}}</span>
                                    <br />
                                </ng-container>
                                <ng-container *ngFor="let msg of schemaOutErrorMsgs">
                                    <span style="color:#f44336;font-size: 14px;font-weight: 600">{{msg}}</span>
                                    <br />
                                </ng-container>
                            </div>
                            <button style="height: 36px" type="submit" mat-button color="primary">Save</button>
                            <button style="height: 36px" type="button" mat-button color="warn" (click)="CancelLabelInfo()">Cancel</button>
                        </mat-action-row>
                    </form>
                </mat-expansion-panel>



                <mat-expansion-panel [expanded]="Step==3" (opened)="Step=3;">
                    <mat-expansion-panel-header>
                        <mat-panel-title>
                            Machine Information
                        </mat-panel-title>
                    </mat-expansion-panel-header>
                    <span style="color:red">{{labelInfoErrorMsg}}</span>
                    <mat-card>
                        <h6>
                            <mat-form-field>
                                <mat-label>Info Key</mat-label>
                                <select matNativeControl [(ngModel)]="SelectedInfoKey" (change)="SelectInfoKey()">
                                    <option value="">-- Select InfoKey --</option>
                                    <option *ngFor="let propOption of infoSectionFields" value="{{propOption}}">{{propOption}}</option>
                                </select>
                            </mat-form-field>
                            <mat-icon *ngIf="!IsNewInfoKeyAdded" class="pointer mr-3" style="float:right;" (click)="IsNewInfoKeyAdded=true;NewInfoKey='';NewInfoKeyValue='';NewInfoKeyValueType=1;NewInfoKeyValueMaxLength=1000" matTooltip="Add New Key">add</mat-icon>
                        </h6>
                    </mat-card>
                    <div>
                        <div fxLayout="row" style="margin-right:20px" fxFlex="50%" fxFlex.gt-sm="50%">
                            <div fxLayout="column" fxFlex>
                                <table class="example-full-width" cellspacing="10">
                                    <ng-container *ngFor="let recipient of infoSectionData; let i = index">
                                        <tr *ngIf="i%2==0">
                                            <td valign="top" style="width: 230px;padding-top:16px; padding-right: 10px;">
                                                <mat-label *ngIf="recipient['InfoKey']!='CPU Requirement' && recipient['InfoKey']!='RAM Requirement' && recipient['InfoKey']!='Estimated Run Time'">
                                                    {{recipient['InfoKey']}} :
                                                </mat-label>
                                                <mat-label *ngIf="recipient['InfoKey']=='CPU Requirement'">
                                                    CPU Requirement (VCPU) :
                                                </mat-label>
                                                <mat-label *ngIf="recipient['InfoKey']=='RAM Requirement'">
                                                    RAM Requirement (GB) :
                                                </mat-label>
                                                <mat-label *ngIf="recipient['InfoKey']=='Estimated Run Time'">
                                                    Estimated Run Time (Min) :
                                                </mat-label>
                                            </td>
                                            <td width="100px" *ngIf="recipient['InfoValueType']==1">
                                                <mat-form-field class="example-full-width" style="width:250px">
                                                    <input matInput #textLength maxlength="{{recipient['MaxLength']}}" [(ngModel)]="recipient['InfoValue']" />
                                                    <mat-hint align="end">{{textLength.value.length}} / {{recipient['MaxLength']}}</mat-hint>
                                                </mat-form-field><br />
                                                <small *ngIf="recipient['InfoKey']=='Link to Sample Data'">Disclaimer: Need to check with legal(UPDATE NEEDED)</small>
                                            </td>
                                            <td width="100px" *ngIf="recipient['InfoValueType']==2">
                                                <mat-form-field class="example-full-width" style="width:250px">
                                                    <input type="number" matInput maxlength="200" [(ngModel)]="recipient['InfoValue']" />
                                                </mat-form-field>
                                            </td>
                                            <td width="100px" *ngIf="(recipient['InfoValueType']==3 && (recipient['IsCustomKey'] == 'undefined' || recipient['IsCustomKey']==true))">
                                                <mat-form-field class="example-full-width" style="width:125px">
                                                    <input matInput maxlength="200" placeholder="Value 1" [(ngModel)]="recipient['BinarySelectorValue1']" />
                                                </mat-form-field>
                                                <mat-form-field class="example-full-width" style="width:125px">
                                                    <input matInput maxlength="200" placeholder="Value 2" [(ngModel)]="recipient['BinarySelectorValue2']" />
                                                </mat-form-field>
                                            </td>
                                            <td style="padding-top:16px" width="100px" *ngIf="recipient['InfoValueType']==3 && recipient['IsCustomKey']==false">
                                                <mat-radio-group aria-label="Select an option" [(ngModel)]="recipient['InfoValue']">
                                                    <mat-radio-button value="1">Yes</mat-radio-button>
                                                    &nbsp;&nbsp;
                                                    <mat-radio-button value="0">No</mat-radio-button>
                                                </mat-radio-group>
                                                <div *ngIf="SetAdditionalInfoVisibility(recipient)">
                                                    <mat-form-field class="example-full-width" style="width:255px">
                                                        <textarea placeholder="{{infoSectionFieldsConfig[recipient['InfoKey']]['PlaceHolder']}}" rows="{{infoSectionFieldsConfig[recipient['InfoKey']]['AdditionalInfoMaxLength'] == 60 ? 2 : 5}}" cols="50" matInput #additionalInfo maxlength="{{infoSectionFieldsConfig[recipient['InfoKey']]['AdditionalInfoMaxLength']}}" [(ngModel)]="recipient['AdditionalInfoText']"></textarea>
                                                        <mat-hint align="end">{{additionalInfo.value.length}} / {{infoSectionFieldsConfig[recipient['InfoKey']]['AdditionalInfoMaxLength']}}</mat-hint>
                                                    </mat-form-field>
                                                </div>
                                            </td>
                                            <td width="100px" *ngIf="recipient['InfoValueType']==4">
                                                <span>{{recipient['SliderMin']}}</span>
                                                <mat-slider thumbLabel [displayWith]="formatLabel" tickInterval="1" min="{{recipient['SliderMin']}}" max="{{recipient['SliderMax']}}" [(ngModel)]="recipient['InfoValue']"></mat-slider>
                                                <span>{{recipient['SliderMax']}}</span>
                                            </td>
                                            <td width="100px" *ngIf="recipient['InfoValueType']==5">
                                                <mat-form-field class="example-full-width" style="width:125px">
                                                    <input type="number" placeholder="Minimum Value" matInput maxlength="200" [(ngModel)]="recipient['SliderMin']" />
                                                </mat-form-field>
                                                <mat-form-field class="example-full-width" style="width:125px">
                                                    <input type="number" placeholder="Maximum Value" matInput maxlength="200" [(ngModel)]="recipient['SliderMax']" />
                                                </mat-form-field>
                                            </td>
                                            <td *ngIf="recipient['InfoValueType']==6" width="250px">
                                                <div *ngIf="(recipient['IsCustomKey'] == undefined || recipient['IsCustomKey']==true)">
                                                    <div *ngFor="let item of recipient['InfoValueOptions']; let idx= index">
                                                        <mat-form-field class="example-full-width" style="width:100px">
                                                            <input matInput maxlength="200" placeholder="Name" [(ngModel)]="item.key" />
                                                        </mat-form-field>
                                                        <mat-form-field class="example-full-width" style="width:100px">
                                                            <input matInput maxlength="200" placeholder="Value" [(ngModel)]="item.value" />
                                                        </mat-form-field>
                                                        <mat-icon class="pointer mr-3" (click)="DeleteInfoKeyOptions(idx,i)" style="font-size:20px" matTooltip="Delete Sub Key">remove_circle</mat-icon>
                                                    </div>
                                                </div>
                                                <!--(onchange)="{{recipient['AdditionalInfoText']=""}}"-->
                                                <mat-form-field *ngIf="recipient['IsCustomKey']==false">



                                                    <select matNativeControl [(ngModel)]="recipient['InfoValue']" [ngModelOptions]="{standalone: true}" (change)="ResetAdditionalInfoTextBox(recipient)">
                                                        <option *ngFor="let propOption of infoSectionFieldsConfig[recipient['InfoKey']]['Options']" value="{{propOption}}">{{propOption}}</option>
                                                    </select>
                                                </mat-form-field>
                                                <div *ngIf="SetAdditionalInfoVisibility(recipient) && recipient['IsCustomKey']==false">
                                                    <mat-form-field class="example-full-width" style="width:255px">
                                                        <textarea placeholder="Enter {{recipient['InfoValue']=='510K Cleared'? '510K Cleared and UDI': recipient['InfoValue']}} {{recipient['InfoValue']=='510K Cleared'?'Numbers':'Number'}}" rows="{{infoSectionFieldsConfig[recipient['InfoKey']]['AdditionalInfoMaxLength'] == 60 && recipient['InfoValue']!='510K Cleared' ? 2 : 5}}" cols="50" matInput #additionalInfo maxlength="{{recipient['InfoValue']=='510K Cleared' ? 160: infoSectionFieldsConfig[recipient['InfoKey']]['AdditionalInfoMaxLength']}}" [(ngModel)]="recipient['AdditionalInfoText']"></textarea>
                                                        <mat-hint align="end">{{additionalInfo.value.length}} / {{recipient['InfoValue']=='510K Cleared' ? 160: infoSectionFieldsConfig[recipient['InfoKey']]['AdditionalInfoMaxLength']}}</mat-hint>



                                                        <!--<input matInput maxlength="{{infoSectionFieldsConfig[recipient['InfoKey']]['AdditionalInfoMaxLength']}}" [(ngModel)]="recipient['AdditionalInfoText']" />-->
                                                    </mat-form-field>

                                                </div>

                                            </td>
                                            <td *ngIf="recipient['InfoValueType']==7" width="250px">
                                                <div *ngFor="let item of recipient['InfoValueOptions']; let idx= index">
                                                    <mat-form-field class="example-full-width" style="width:100px">
                                                        <input matInput maxlength="200" placeholder="Name" [(ngModel)]="item.key" />
                                                    </mat-form-field>
                                                    <mat-form-field class="example-full-width" style="width:100px">
                                                        <input matInput maxlength="200" placeholder="Value" [(ngModel)]="item.value" />
                                                    </mat-form-field>
                                                    <mat-icon class="pointer mr-3" (click)="DeleteInfoKeyOptions(idx,i)" style="font-size:20px" matTooltip="Delete Sub Key">remove_circle</mat-icon>
                                                </div>
                                            </td>
                                            <td *ngIf="SetDeleteIconVisibility(recipient['InfoKey'])">
                                                <mat-icon class="pointer mr-3" style="font-size:20px" *ngIf="recipient!='name'" (click)="DeleteInfoKey(i,recipient['InfoKey'])" matTooltip="Delete Key">close</mat-icon>
                                            </td>
                                        </tr>
                                    </ng-container>
                                </table>
                            </div>
                        </div>
                        <div fxLayout="row" fxFlex="50%" fxFlex.gt-sm="50%">
                            <div fxLayout="column" fxFlex>
                                <table class="example-full-width" cellspacing="10">
                                    <ng-container *ngFor="let recipient of infoSectionData; let i = index">
                                        <tr *ngIf="i%2!=0">
                                            <td valign="top" style="width: 230px;padding-top:16px; padding-right: 10px;">
                                                <mat-label *ngIf="recipient['InfoKey']!='CPU Requirement' && recipient['InfoKey']!='RAM Requirement' && recipient['InfoKey']!='Estimated Run Time'">
                                                    {{recipient['InfoKey']}} :
                                                </mat-label>
                                                <mat-label *ngIf="recipient['InfoKey']=='CPU Requirement'">
                                                    CPU Requirement (VCPU) :
                                                </mat-label>
                                                <mat-label *ngIf="recipient['InfoKey']=='RAM Requirement'">
                                                    RAM Requirement (GB) :
                                                </mat-label>
                                                <mat-label *ngIf="recipient['InfoKey']=='Estimated Run Time'">
                                                    Estimated Run Time (Min) :
                                                </mat-label>
                                            </td>
                                            <td width="100px" *ngIf="recipient['InfoValueType']==1">
                                                <mat-form-field class="example-full-width" style="width:250px">
                                                    <input matInput #textLength maxlength="{{recipient['MaxLength']}}" [(ngModel)]="recipient['InfoValue']" />
                                                    <mat-hint align="end">{{textLength.value.length}} / {{recipient['MaxLength']}}</mat-hint>
                                                </mat-form-field>
                                                <br />
                                                <small *ngIf="recipient['InfoKey']=='Link to Sample Data'">Disclaimer: Need to check with legal(UPDATE NEEDED)</small>
                                            </td>
                                            <td width="100px" *ngIf="recipient['InfoValueType']==2">
                                                <mat-form-field class="example-full-width" style="width:250px">
                                                    <input type="number" matInput maxlength="200" [(ngModel)]="recipient['InfoValue']" />
                                                </mat-form-field>
                                            </td>
                                            <td width="100px" *ngIf="(recipient['InfoValueType']==3 && (recipient['IsCustomKey'] == 'undefined' || recipient['IsCustomKey']==true))">
                                                <mat-form-field class="example-full-width" style="width:125px">
                                                    <input matInput maxlength="200" placeholder="Value 1" [(ngModel)]="recipient['BinarySelectorValue1']" />
                                                </mat-form-field>
                                                <mat-form-field class="example-full-width" style="width:125px">
                                                    <input matInput maxlength="200" placeholder="Value 2" [(ngModel)]="recipient['BinarySelectorValue2']" />
                                                </mat-form-field>
                                            </td>
                                            <td style="padding-top:16px" width="100px" *ngIf="recipient['InfoValueType']==3 && recipient['IsCustomKey']==false">
                                                <mat-radio-group aria-label="Select an option" [(ngModel)]="recipient['InfoValue']">
                                                    <mat-radio-button value="1">Yes</mat-radio-button>
                                                    &nbsp;&nbsp;
                                                    <mat-radio-button value="0">No</mat-radio-button>
                                                </mat-radio-group>
                                                <div *ngIf="SetAdditionalInfoVisibility(recipient)">
                                                    <mat-form-field class="example-full-width" style="width:255px">
                                                        <textarea placeholder="{{infoSectionFieldsConfig[recipient['InfoKey']]['PlaceHolder']}}" rows="{{infoSectionFieldsConfig[recipient['InfoKey']]['AdditionalInfoMaxLength'] == 60 ? 2 : 5}}" cols="50" matInput #additionalInfo maxlength="{{infoSectionFieldsConfig[recipient['InfoKey']]['AdditionalInfoMaxLength']}}" [(ngModel)]="recipient['AdditionalInfoText']"></textarea>
                                                        <mat-hint align="end">{{additionalInfo.value.length}} / {{infoSectionFieldsConfig[recipient['InfoKey']]['AdditionalInfoMaxLength']}}</mat-hint>



                                                        <!--<input matInput maxlength="{{infoSectionFieldsConfig[recipient['InfoKey']]['AdditionalInfoMaxLength']}}" [(ngModel)]="recipient['AdditionalInfoText']" />-->
                                                    </mat-form-field>

                                                </div>

                                            </td>
                                            <td width="100px" *ngIf="recipient['InfoValueType']==4">
                                                <span>{{recipient['SliderMin']}}</span>
                                                <mat-slider thumbLabel [displayWith]="formatLabel" tickInterval="1" min="{{recipient['SliderMin']}}" max="{{recipient['SliderMax']}}" [(ngModel)]="recipient['InfoValue']"></mat-slider>
                                                <span>{{recipient['SliderMax']}}</span>
                                            </td>
                                            <td width="250px" *ngIf="recipient['InfoValueType']==5">
                                                <mat-form-field class="example-full-width" style="width:125px">
                                                    <input type="number" placeholder="Minimum Value" matInput maxlength="200" [(ngModel)]="recipient['SliderMin']" />
                                                </mat-form-field>
                                                <mat-form-field class="example-full-width" style="width:125px">
                                                    <input type="number" placeholder="Maximum Value" matInput maxlength="200" [(ngModel)]="recipient['SliderMax']" />
                                                </mat-form-field>
                                            </td>
                                            <td *ngIf="recipient['InfoValueType']==6" width="250px">
                                                <div *ngIf="(recipient['IsCustomKey'] == undefined || recipient['IsCustomKey']==true)">
                                                    <div *ngFor="let item of recipient['InfoValueOptions']; let idx= index">
                                                        <mat-form-field class="example-full-width" style="width:100px">
                                                            <input matInput maxlength="200" placeholder="Name" [(ngModel)]="item.key" />
                                                        </mat-form-field>
                                                        <mat-form-field class="example-full-width" style="width:100px">
                                                            <input matInput maxlength="200" placeholder="Value" [(ngModel)]="item.value" />
                                                        </mat-form-field>
                                                        <mat-icon class="pointer mr-3" (click)="DeleteInfoKeyOptions(idx,i)" style="font-size:20px" matTooltip="Delete Sub Key">remove_circle</mat-icon>
                                                    </div>
                                                </div>
                                                <!--(onchange)="{{recipient['AdditionalInfoText']=""}}"-->
                                                <mat-form-field *ngIf="recipient['IsCustomKey']==false">

                                                    <select matNativeControl [(ngModel)]="recipient['InfoValue']" [ngModelOptions]="{standalone: true}" (change)="ResetAdditionalInfoTextBox(recipient)">
                                                        <option *ngFor="let propOption of infoSectionFieldsConfig[recipient['InfoKey']]['Options']" value="{{propOption}}">{{propOption}}</option>
                                                    </select>
                                                </mat-form-field>
                                                <div *ngIf="SetAdditionalInfoVisibility(recipient) && recipient['IsCustomKey']==false">
                                                    <mat-form-field class="example-full-width" style="width:255px">
                                                        <textarea placeholder="Enter {{recipient['InfoValue']=='510K Cleared'? '510K Cleared and UDI': recipient['InfoValue']}} {{recipient['InfoValue']=='510K Cleared'?'Numbers':'Number'}}" rows="{{infoSectionFieldsConfig[recipient['InfoKey']]['AdditionalInfoMaxLength'] == 60 && recipient['InfoValue']!='510K Cleared' ? 2 : 5}}" cols="50" matInput #additionalInfo maxlength="{{recipient['InfoValue']=='510K Cleared' ? 160: infoSectionFieldsConfig[recipient['InfoKey']]['AdditionalInfoMaxLength']}}" [(ngModel)]="recipient['AdditionalInfoText']"></textarea>
                                                        <mat-hint align="end">{{additionalInfo.value.length}} / {{recipient['InfoValue']=='510K Cleared' ? 160: infoSectionFieldsConfig[recipient['InfoKey']]['AdditionalInfoMaxLength']}}</mat-hint>



                                                        <!--<input matInput maxlength="{{infoSectionFieldsConfig[recipient['InfoKey']]['AdditionalInfoMaxLength']}}" [(ngModel)]="recipient['AdditionalInfoText']" />-->
                                                    </mat-form-field>

                                                </div>

                                            </td>
                                            <td *ngIf="recipient['InfoValueType']==7" width="250px">
                                                <div *ngFor="let item of recipient['InfoValueOptions']; let idx= index">
                                                    <mat-form-field class="example-full-width" style="width:100px">
                                                        <input matInput maxlength="200" placeholder="Name" [(ngModel)]="item.key" />
                                                    </mat-form-field>
                                                    <mat-form-field class="example-full-width" style="width:100px">
                                                        <input matInput maxlength="200" placeholder="Value" [(ngModel)]="item.value" />
                                                    </mat-form-field>
                                                    <mat-icon class="pointer mr-3" (click)="DeleteInfoKeyOptions(idx,i)" style="font-size:20px" matTooltip="Delete Sub Key">remove_circle</mat-icon>
                                                </div>
                                            </td>
                                            <td *ngIf="SetDeleteIconVisibility(recipient['InfoKey'])">
                                                <mat-icon class="pointer mr-3" style="font-size:20px" *ngIf="recipient!='name'" (click)="DeleteInfoKey(i,recipient['InfoKey'])" matTooltip="Delete Key">close</mat-icon>
                                            </td>
                                        </tr>
                                    </ng-container>
                                </table>
                            </div>
                        </div>
                    </div>

                    <table class="example-full-width" cellspacing="10">
                        <tr *ngIf="SelectedInfoKey!=''">
                            <td valign="top" style="width: 230px;padding-top:16px; padding-right: 10px;">
                                <label *ngIf="SelectedInfoValueType!=4">{{SelectedInfoKey}} :</label>
                                <label *ngIf="SelectedInfoValueType==4">{{SelectedInfoKey}} ({{infoSectionFieldsConfig[SelectedInfoKey]['SliderLabel']}}) :</label>
                            </td>
                            <td *ngIf="IsSelectedKeyOptionAdded==true && (SelectedInfoValueType==6 || SelectedInfoValueType==7)">
                                <mat-form-field class="example-full-width" style="width:250px">
                                    <input matInput maxlength="200" [(ngModel)]="SelectedKeyOptionText" />
                                </mat-form-field>
                                <mat-icon class="pointer mr-3" style="font-size:20px" (click)="SaveOption()" matTooltip="Save">done</mat-icon>
                                <mat-icon class="pointer mr-3" style="font-size:20px" (click)="IsSelectedKeyOptionAdded=false;SelectedKeyOptionText=''" matTooltip="Cancel">close</mat-icon>
                            </td>
                            <td *ngIf="SelectedInfoValueType==1" width="200px">
                                <mat-form-field class="example-full-width" style="width:250px">
                                    <input matInput maxlength="{{SelectedInfoKeyValueMaxLength}}" #selectedInfoKeyValue [(ngModel)]="SelectedInfoKeyValue" />
                                    <mat-hint align="end">{{selectedInfoKeyValue.value.length}} / {{SelectedInfoKeyValueMaxLength}}</mat-hint>
                                </mat-form-field><br />
                                <small *ngIf="SelectedInfoKey=='Link to Sample Data'">Diclaimer: Need to check with legal(Update Needed)</small>
                            </td>
                            <td *ngIf="SelectedInfoValueType==2" width="200px">
                                <mat-form-field class="example-full-width" style="width:250px">
                                    <input type="number" matInput maxlength="200" [(ngModel)]="SelectedInfoKeyValue" />
                                </mat-form-field>
                            </td>
                            <td style="padding-top:16px" *ngIf="SelectedInfoValueType==3" width="200px">
                                <mat-radio-group (ngModelChange)="GetAdditionalInfoField($event)" [(ngModel)]="SelectedInfoKeyValue" aria-label="Select an option">
                                    <mat-radio-button value="1">Yes</mat-radio-button>
                                    &nbsp;&nbsp;
                                    <mat-radio-button value="0">No</mat-radio-button>
                                </mat-radio-group>
                                <div *ngIf="SelectedInfoFieldAdditionalTextVisibility==true">
                                    <mat-form-field class="example-full-width" style="width:255px">
                                        <textarea placeholder="{{infoSectionFieldsConfig[SelectedInfoKey]['PlaceHolder']}}" rows="{{infoSectionFieldsConfig[SelectedInfoKey]['AdditionalInfoMaxLength'] == 60 ? 2 : 5}}" cols="50" matInput #additionalInfoLength maxlength="{{infoSectionFieldsConfig[SelectedInfoKey]['AdditionalInfoMaxLength']}}" [(ngModel)]="SelectedInfoFieldAdditionalText"></textarea>
                                        <mat-hint align="end">{{additionalInfoLength.value.length}} / {{infoSectionFieldsConfig[SelectedInfoKey]['AdditionalInfoMaxLength']}}</mat-hint>

                                        <!--<input matInput maxlength="{{infoSectionFieldsConfig[SelectedInfoKey]['AdditionalInfoMaxLength']}}" [(ngModel)]="SelectedInfoFieldAdditionalText" />-->
                                    </mat-form-field>
                                </div>
                            </td>
                            <td *ngIf="SelectedInfoValueType==4" width="200px">
                                <span>{{SelectedSliderMinValue}}</span>
                                <mat-slider thumbLabel [displayWith]="formatLabel" tickInterval="1" min="{{SelectedSliderMinValue}}" max="{{SelectedSliderMaxValue}}" [(ngModel)]="SelectedInfoKeyValue"></mat-slider>
                                <span>{{SelectedSliderMaxValue}}</span>
                            </td>
                            <td *ngIf="SelectedInfoValueType==5" width="200px">

                                <mat-form-field class="example-full-width" style="width:125px">
                                    <input type="number" placeholder="Minimum Value" matInput maxlength="200" [(ngModel)]="SelectedSliderMinValue" />
                                </mat-form-field>
                                <mat-form-field class="example-full-width" style="width:125px">
                                    <input type="number" placeholder="Maximum Value" matInput maxlength="200" [(ngModel)]="SelectedSliderMaxValue" />
                                </mat-form-field>
                            </td>
                            <td *ngIf="SelectedInfoValueType==6 && IsSelectedKeyOptionAdded==false" width="200px">
                                <mat-form-field>
                                    <select matNativeControl (ngModelChange)="GetAdditionalInfoField($event)" [(ngModel)]="SelectedInfoKeyValue" [ngModelOptions]="{standalone: true}">
                                        <option *ngFor="let propOption of SelectedInfoKeyValueOptions" value="{{propOption}}">{{propOption}}</option>
                                    </select>
                                </mat-form-field>
                                <div *ngIf="SelectedInfoFieldAdditionalTextVisibility==true">
                                    <mat-form-field class="example-full-width" style="width:255px">
                                        <textarea placeholder="Enter {{SelectedInfoKeyValue}} number" rows="5" cols="50" matInput #additionalInfoLength maxlength="{{infoSectionFieldsConfig[SelectedInfoKey]['AdditionalInfoMaxLength']}}" [(ngModel)]="SelectedInfoFieldAdditionalText"></textarea>
                                        <mat-hint align="end">{{additionalInfoLength.value.length}} / {{infoSectionFieldsConfig[SelectedInfoKey]['AdditionalInfoMaxLength']}}</mat-hint>



                                        <!--<input matInput maxlength="{{infoSectionFieldsConfig[SelectedInfoKey]['AdditionalInfoMaxLength']}}" [(ngModel)]="SelectedInfoFieldAdditionalText" />-->
                                    </mat-form-field>
                                </div>
                            </td>
                            <td *ngIf="SelectedInfoValueType==7 && IsSelectedKeyOptionAdded==false" width="250px">
                                <div *ngFor="let item of SelectedMultipleInfo;let i=index">
                                    <mat-form-field class="example-full-width" style="width:100px">
                                        <input matInput maxlength="200" placeholder="Name" [(ngModel)]="item.key" />
                                    </mat-form-field>
                                    <mat-form-field class="example-full-width" style="width:100px">
                                        <input matInput maxlength="200" placeholder="Value" [(ngModel)]="item.value" />
                                    </mat-form-field>
                                    <mat-icon class="pointer mr-3" (click)="DeleteDynamicInfoKey(i,1)" style="font-size:20px" matTooltip="Delete Sub Key">remove_circle</mat-icon>
                                </div>
                            </td>
                            <td>
                                <mat-icon class="pointer mr-3" (click)="DeleteInfoKey(-1,SelectedInfoKey)" style="font-size:20px" matTooltip="Delete Key">
                                    close
                                </mat-icon>

                            </td>
                        </tr>
                        <tr *ngIf="IsNewInfoKeyAdded">
                            <td valign="top" style="width: 230px;padding-right: 10px;">
                                <mat-form-field class="example-full-width">
                                    <input matInput placeholder="Key" maxlength="200" [(ngModel)]="NewInfoKey">
                                </mat-form-field>
                            </td>
                            <td valign="top">
                                <mat-form-field>
                                    <select matNativeControl [(ngModel)]="NewInfoKeyValueType" [ngModelOptions]="{standalone: true}">
                                        <option value="1">Free Text</option>
                                        <option value="2">Numeric</option>
                                        <option value="3">Binary Selector</option>
                                        <option value="5">Numeric Slider(Min,Max)</option>
                                        <option value="6">Select One From Multiple</option>
                                        <option value="7">Select Multiple from Multiple</option>
                                    </select>
                                </mat-form-field>
                                <mat-icon *ngIf="(NewInfoKeyValueType==6 || NewInfoKeyValueType==7)" style="font-size:20px" class="pointer mr-3" (click)="AddDynamicInfoKeys(2)" matTooltip="Add New Option">add</mat-icon>
                            </td>
                            <td *ngIf="IsNewKeyOptionAdded==true && (NewInfoKeyValueType==6 || NewInfoKeyValueType==7)">
                                <mat-form-field class="example-full-width" style="width:250px">
                                    <input matInput maxlength="200" [(ngModel)]="NewKeyOptionText" />
                                </mat-form-field>
                                <mat-icon class="pointer mr-3" style="font-size:20px" (click)="SaveNewKeyOption()" matTooltip="Save">done</mat-icon>
                                <mat-icon class="pointer mr-3" style="font-size:20px" (click)="IsNewKeyOptionAdded=false;NewKeyOptionText=''" matTooltip="Cancel">close</mat-icon>
                            </td>
                            <td *ngIf="NewInfoKeyValueType==1" width="200px">
                                <mat-form-field class="example-full-width" style="width:250px">
                                    <input matInput maxlength="{{NewInfoKeyValueMaxLength}}" #infoKeyValue [(ngModel)]="NewInfoKeyValue" />



                                    <!--<mat-hint align="end">{{infoKeyValue.value.length}} / {{NewInfoKeyValueMaxLength}}</mat-hint>-->
                                </mat-form-field>
                            </td>

                            <td *ngIf="NewInfoKeyValueType==2" width="200px">

                                <mat-form-field class="example-full-width" style="width:250px">
                                    <input type="number" matInput maxlength="200" [(ngModel)]="NewInfoKeyValue" />
                                </mat-form-field>
                            </td>
                            <td *ngIf="NewInfoKeyValueType==3" width="200px">
                                <mat-form-field class="example-full-width" style="width:125px">
                                    <input matInput maxlength="200" placeholder="Value 1" [(ngModel)]="NewBinaryText1" />
                                </mat-form-field>
                                <mat-form-field class="example-full-width" style="width:125px">
                                    <input matInput maxlength="200" placeholder="Value 2" [(ngModel)]="NewBinaryText2" />
                                </mat-form-field>
                            </td>
                            <td *ngIf="NewInfoKeyValueType==4" width="200px">
                                <mat-slider thumbLabel [displayWith]="formatLabel" tickInterval="1" min="1" max="10000" [(ngModel)]="NewInfoKeyValue"></mat-slider>
                            </td>
                            <td *ngIf="NewInfoKeyValueType==5" width="200px">
                                <mat-form-field class="example-full-width" style="width:125px">
                                    <input type="number" placeholder="Minimum Value" matInput maxlength="200" [(ngModel)]="NewSliderMinValue" />
                                </mat-form-field>
                                <mat-form-field class="example-full-width" style="width:125px">
                                    <input type="number" placeholder="Maximum Value" matInput maxlength="200" [(ngModel)]="NewSliderMaxValue" />
                                </mat-form-field>
                            </td>
                            <td *ngIf="NewInfoKeyValueType==6 && IsNewKeyOptionAdded==false" width="250px">
                                <div *ngFor="let item of NewMultipleInfo;let i=index">
                                    <mat-form-field class="example-full-width" style="width:100px">
                                        <input matInput maxlength="200" placeholder="Name" [(ngModel)]="item.key" />
                                    </mat-form-field>
                                    <mat-form-field class="example-full-width" style="width:100px">
                                        <input matInput maxlength="200" placeholder="Value" [(ngModel)]="item.value" />
                                    </mat-form-field>
                                    <mat-icon class="pointer mr-3" (click)="DeleteDynamicInfoKey(i,2)" style="font-size:20px" matTooltip="Delete Sub Key">remove_circle</mat-icon>
                                </div>
                            </td>
                            <td *ngIf="NewInfoKeyValueType==7 && IsNewKeyOptionAdded==false" width="250px">
                                <div *ngFor="let item of NewMultipleInfo; let i= index">
                                    <mat-form-field class="example-full-width" style="width:100px">
                                        <input matInput maxlength="200" placeholder="Name" [(ngModel)]="item.key" />
                                    </mat-form-field>
                                    <mat-form-field class="example-full-width" style="width:100px">
                                        <input matInput maxlength="200" placeholder="Value" [(ngModel)]="item.value" />
                                    </mat-form-field>
                                    <mat-icon class="pointer mr-3" (click)="DeleteDynamicInfoKey(i,2)" style="font-size:20px" matTooltip="Delete Sub Key">remove_circle</mat-icon>
                                </div>
                            </td>
                            <td>
                                <mat-icon class="pointer mr-3" (click)="IsNewInfoKeyAdded=false" style="font-size:20px" matTooltip="Delete">
                                    close
                                </mat-icon>

                            </td>
                        </tr>
                    </table>
                    <mat-action-row>
                        <button mat-button color="primary" (click)="SaveJsonData(3)">Save</button>
                        <button mat-button color="warn" (click)="CancelLabelInfo()">Cancel</button>

                    </mat-action-row>
                </mat-expansion-panel>



            </mat-accordion>
        </mat-tab>




        <mat-tab label="Evaluate">
            <div class="site-main rounded text-center">
                <mat-list *ngIf="MachineData.Label != null && !isMachineRunning">
                    <ng-container *ngFor="let prop of MachineData.Label['schema-in'] | keyvalue; let i = index">
                        <mat-list-item>
                            {{prop.key}} &nbsp;&nbsp;<span class="text-secondary">({{getPropertyType(prop.value)}})</span>
                            <button mat-raised-button color="primary" class="ml-2" *ngIf="showButtonForProperty(prop.value)" (click)="SelectFiles(prop.key,prop.value, i)">{{selectedInputItems[prop.key] ? "Change" : "Select"}}</button>
                            <select *ngIf="getPropertyType(prop.value) == 'enum'" (change)="SelectEnum(prop.key, $event.target.value, i)">
                                <option *ngFor="let propOption of prop.value.enum" value="{{propOption}}">{{propOption}}</option>
                            </select>
                            <div><input type="checkbox" *ngIf="getPropertyType(prop.value) == 'boolean' && !SelectKeyValue(prop.key, 'false', i)" (change)="SelectKeyValue(prop.key, $event.target.checked, i)" /></div>
                            <input type="text" *ngIf="getPropertyType(prop.value) == 'string'" (change)="SelectKeyValue(prop.key, $event.target.value, i) " />
                            <span class="ml-2" *ngIf="selectedInputItems[prop.key]">{{selectedInputItems[prop.key].SelectedValue.name}}</span>
                        </mat-list-item>
                        <mat-divider></mat-divider>
                    </ng-container>
                </mat-list>
                <br />
                <button mat-raised-button color="primary" (click)="Evaluate()" *ngIf="!isMachineRunning && MachineData.Label != null">Evaluate</button>
                <div style="color:white;" *ngIf="isMachineRunning">
                    <span class="mat-primary">Job added to queue: {{currentBatchID}}</span>
                    <br /><br />
                    <div class="d-inline-flex" style="font-size:20px">
                        <app-fulfilling-bouncing-circle-spinner [animationDuration]="5000" [size]="30" [color]="'#ffd044'"></app-fulfilling-bouncing-circle-spinner>
                        <span class="ml-3">{{EvalMessage}}</span>
                    </div>
                </div>
                <br />
                <br />
                <div *ngIf="showResults" class="text-light">
                    <mat-divider class="mb-3 mt-1"></mat-divider>
                    <span>Evaluation of {{currentBatchID}} is finished: {{resultStatus}}</span>
                    <br />
                    <button mat-button color="primary" (click)="ShowResults()">See the Results</button>
                    <br /><br />
                </div>
            </div>
        </mat-tab>

        <mat-tab label="Administration" *ngIf="Mode == 'dev'">
            <div style="padding-left: 30px">
                <!-- <div>
                    <h2 class="text-light">Update Image Label Data</h2>
                    <span class="instruction">Update the label information from uploaded docker image</span>
                </div>
                <br />
                <div stlye="width:200px;">
                    <button mat-raised-button color="primary" (click)="UpdateMachineRepoData()">Update data on portal</button>
                    <mat-progress-bar mode="query" *ngIf="showUpdateProgress == 1" style="width:50px;display:inline-block;margin-left:30px;"></mat-progress-bar>
                    <mat-icon style="color:lawngreen;display:inline-block;margin-left:30px;margin-bottom:10px;font-size:32px;vertical-align:middle;" *ngIf="showUpdateProgress == 2">done</mat-icon>
                    <mat-icon style="color:red;display:inline-block;margin-left:30px;margin-bottom:10px;font-size:32px;vertical-align:middle;" *ngIf="showUpdateProgress == 3">error</mat-icon>
                </div>
                <br /><br /> -->
                <div class="section push-image text-light">
                    <h2>Push Image</h2>
                    <div class="instruction">Click the button below to retrieve custom Docker commands to update your machine's image.</div>
                    <br />
                    <button mat-raised-button color="primary" (click)="GetPushCommands()">Get Push Commands</button>
                    <br /><br>
                    <div *ngIf="showPushCommands">
                        <div className="instruction">When your solution is ready, enter these Docker commands in your terminal to publish it to this machine.</div>
                        <br />
                        <h4>Authenticate<button mat-raised-button color="primary" class="clipboardBtn" (click)="CopyToClipboard(this.authCommand)">Copy to clipboard </button></h4>
                        <p class="code">{{authCommand}}</p>
                        <br />
                        <h4>Build Image<button mat-raised-button color="primary" class="clipboardBtn" (click)="CopyToClipboard(this.buildCommand)">Copy to clipboard </button></h4>
                        <p class="code">{{buildCommand}}</p>
                        <br />
                        <h4>Tag Image<button mat-raised-button color="primary" class="clipboardBtn" (click)="CopyToClipboard(this.tagCommand)">Copy to clipboard </button></h4>
                        <p class="code">{{tagCommand}}</p>
                        <br />
                        <h4>Push Image<button mat-raised-button color="primary" class="clipboardBtn" (click)="CopyToClipboard(this.pushCommand)">Copy to clipboard </button></h4>
                        <p class="code">{{pushCommand}}</p>
                    </div>
                </div>
                <!-- <p-tabPanel header="Docker" class="bg-dark" style="min-height:650px;">
                    
                </p-tabPanel> -->
                <!-- <p-tabPanel header="Delete" style="min-height:650px;">
                    
                </p-tabPanel> -->
                <div class="section delete-machine">
                    <h2 class="text-light">Delete Machine</h2>
                    <div class="text-light">This operation is not undoable. Please be sure you want to permanently delete the machine and then click the button below.</div>
                    <br />
                    <button mat-raised-button color="primary" (click)="DeleteMachine()"><mat-icon style="margin-bottom:3px;">delete</mat-icon> Delete Machine</button>
                </div>
            </div>
        </mat-tab>

        <mat-tab *ngIf="Mode =='dev'" label="Deployment">
            <div class="tab-background tab-item" style="padding:15px;">
                <h2 class="text-light">Deploy Machine</h2>
                <mat-card>
                    <mat-card-subtitle>
                        Enter an a tag name to version the image that will get deployed to production.
                    </mat-card-subtitle>
                    <mat-card-content>
                        <span *ngIf="isVersionTagExists" style="color:red">Error: Machine Version is already created with this version tag</span>
                        <span *ngIf="!isVersionTagValid" style="color:red">Error: Invalid Machine Tag. Cannot contain spaces or special character or tag like latest or version.</span>
                        <div *ngIf="!isVersionSaving">
                            <mat-form-field class="w-75 mr-2">
                                <input matInput placeholder="Machine Version Tag" #versionTagName [(ngModel)]="VersionTagName">
                            </mat-form-field>
                            <button mat-raised-button (click)="SaveVersion()" color="primary">Deploy Image</button><br />
                        </div>
                        <div style="color:white;text-align:center" *ngIf="isVersionSaving">
                            <div class="d-inline-flex" style="font-size:20px;left:100px">
                                <br />
                                <br />
                                <app-fulfilling-bouncing-circle-spinner [animationDuration]="5000" [size]="30" [color]="'#ffd044'"></app-fulfilling-bouncing-circle-spinner>
                                <span class="ml-2"> Deploying Machine. This may take some time to duplicate the machine</span>
                            </div>
                        </div>
                        <span *ngIf="isVersionSaved" style="color:green">Success!</span>
                    </mat-card-content>
                </mat-card>
                <br />
                <mat-accordion>
                    <mat-expansion-panel [expanded]="true">
                        <mat-expansion-panel-header [expandedHeight]="'45px'">
                            <mat-panel-title>
                                <span><mat-icon style="vertical-align:bottom;">home</mat-icon> Deployed Machines</span>
                            </mat-panel-title>
                        </mat-expansion-panel-header>
                        <table mat-table *ngIf="DeployedMachines" #DeployedMachinesTable [dataSource]="DeployedMachines" class="mat-elevation-z8 w-100">
                            <ng-container matColumnDef="ModelID">
                                <th mat-header-cell *matHeaderCellDef> Model ID </th>
                                <td mat-cell *matCellDef="let element"> {{element.fulldockerid}} </td>
                            </ng-container>
                            <ng-container matColumnDef="Version">
                                <th mat-header-cell *matHeaderCellDef> Version </th>
                                <td mat-cell *matCellDef="let element"> {{element.versiontag}} </td>
                            </ng-container>
                            <ng-container matColumnDef="DateDeployed">
                                <th mat-header-cell *matHeaderCellDef> Date Deployed </th>
                                <td mat-cell *matCellDef="let element"> {{element.lastdeployed | date: 'yyyy-MM-dd HH:mm:ss'}} </td>
                            </ng-container>

                            <tr mat-header-row *matHeaderRowDef="['ModelID','Version','DateDeployed']" style="height:32px;"></tr>
                            <tr mat-row *matRowDef="let row; columns: ['ModelID','Version','DateDeployed'];" style="height:32px;cursor:pointer;"></tr>
                        </table>
                    </mat-expansion-panel>
                </mat-accordion>
            </div>
        </mat-tab>
    </mat-tab-group>
</div>
